---
apiVersion: v1
kind: Namespace
metadata:
  name: kubei
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubei
  namespace: kubei
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: kubei
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kubei
subjects:
- kind: ServiceAccount
  name: kubei
  namespace: kubei
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubei
---
apiVersion: v1
kind: Service
metadata:
  name: clair
  namespace: kubei
  labels:
    app: clair
spec:
  type: ClusterIP
  ports:
  - port: 6060
    protocol: TCP
    name: apiserver
  - port: 6061
    protocol: TCP
    name: health
  selector:
    app: clair
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clair
  namespace: kubei
  labels:
    app: clair
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clair
  template:
    metadata:
      labels:
        app: clair
    spec:
      initContainers:
      - name: check-db-ready
        image: postgres:9.6.5
        command: ['sh', '-c',  'until pg_isready -h postgres -p 5432;  do echo waiting for database; sleep 2; done;']
      containers:
      - name: clair
        image: gcr.io/portshift-release/clair/clair-local-scan
        ports:
        - containerPort: 6060
        - containerPort: 6061
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres
  name: postgres
  namespace: kubei
spec:
  type: ClusterIP
  ports:
    - name: db
      port: 5432
      protocol: TCP
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clair-postgres
  namespace: kubei
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: clair-db  
        image: gcr.io/portshift-release/clair/clair-db
        ports:
        - containerPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  namespace: kubei
  name: kubei
  labels:
    app: kubei
spec:
  type: ClusterIP
  ports:
  - port: 8080
    protocol: TCP
    name: http-webapp
  selector:
    app: kubei
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubei
  namespace: kubei
  labels:
    app: kubei
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubei
  template:
    metadata:
      labels:
        app: kubei
    spec:
      serviceAccountName: kubei
      initContainers:
      - name: init-clairsvc
        image: yauritux/busybox-curl
        args:
          - /bin/sh
          - -c
          - >
            set -x;
            while [ $(curl -sw '%{http_code}' "http://clair.kubei:6060/v1/namespaces" -o /dev/null) -ne 200 ]; do
              echo "waiting for clair to be ready";
              sleep 15;
            done
      containers:
      - name: kubei
        image: gcr.io/development-infra-208909/kubei
        env:
        - name: "MY-POD-NAMESPACE" # immutable.
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: "LISTENING_PORT" # defaults to 8080.
          value: "8080"
        - name: "MAX_PARALLELISM" # max number of scans that will run simultaneously. defaults to 1
          value: "10"
        - name: "TARGET_NAMESPACE" # empty = scan all namespaces
          value: ""
        - name: "CLAIR_OUTPUT" # = minimum level of vulnerability to report. defaults to MEDIUM
          value: "UNKNOWN"
        - name: "IGNORE_NAMESPACES" # a list of namespaces to ignore. defaults no namespace to ignore
          value: "istio-system,kube-system"
        - name: "KLAR_TRACE" # should Klar run as in Trace log level. defaults to false
          value: "false"
        - name: "WHITELIST_FILE" # path to the YAML file with the CVE whitelist. Look at whitelist-example.yaml for the file format. defaults to empty (= no file)
          value: ""
        ports:
        - containerPort: 8080



